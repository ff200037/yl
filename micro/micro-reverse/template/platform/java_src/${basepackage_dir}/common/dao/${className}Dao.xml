<#include "/platform/include/macro.include"/>
<#assign className = table.className>   
<#assign classNameLower = className?uncap_first> 
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- ${table.sqlName} : ${table.remarks} mybatis 配置  -->
<mapper namespace="${basepackage}.common.dao.${className}Dao">

    <resultMap id="${classNameLower}Result" type="${basepackage}.common.pojo.${className}">
<#list table.columns as column>
<#if !column.pk>
    <#if column.sqlTypeName=='NVARCHAR2'>
    	<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="VARCHAR" />
    	<#elseif column.sqlTypeName=='NUMBER'>
    	<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="INTEGER" />
    	<#elseif column.sqlTypeName=='bigint'>
			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=BIGINT${r"}"} <#if column_has_next>,</#if>
		<#elseif column.sqlTypeName=='varchar'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="VARCHAR" />
		<#elseif column.sqlTypeName=='LONGTEXT'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="VARCHAR" />
		<#elseif column.sqlTypeName=='longtext'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="VARCHAR" />
		<#elseif column.sqlTypeName=='int'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="INTEGER" />
		<#elseif column.sqlTypeName=='NUMBER'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="INTEGER" />
		<#elseif column.sqlTypeName=='DATE'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="TIMESTAMP" />
		<#elseif column.sqlTypeName=='date'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="TIMESTAMP" />
		<#elseif column.sqlTypeName=='DATETIME'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="TIMESTAMP" />
		<#elseif column.sqlTypeName=='timestamp'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="TIMESTAMP" />
		<#elseif column.sqlTypeName=='TIMESTAMP'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="TIMESTAMP" />
		<#elseif column.sqlTypeName=='double'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="DOUBLE" />
		<#elseif column.sqlTypeName=='DOUBLE'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="DOUBLE" />
		<#elseif column.sqlTypeName=='datetime'>
		<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="TIMESTAMP" />
    	<#else>
    	<result column="${column.sqlName}" property="${column.columnNameLower}" jdbcType="${column.sqlTypeName}" />
    	</#if>
    </#if>
</#list>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonSelectColumnsPrefix">
	    <![CDATA[
	    select
        <#list table.columns as column>
        	<#if column.sqlTypeName=='TIMESTAMP' || column.sqlTypeName=='timestamp' || column.sqlTypeName=='DATETIME' || column.sqlTypeName=='datetime' || column.sqlTypeName=='date' || column.sqlTypeName=='DATE'>
        	DATE_FORMAT(pojo.${column.sqlName}, "%Y-%m-%d %H:%i") AS ${column.columnNameLower} <#if column_has_next>,</#if> -- ${column.columnAlias}
        	<#else>
        	pojo.${column.sqlName} AS ${column.columnNameLower} <#if column_has_next>,</#if> -- ${column.columnAlias}
        	</#if>
        </#list>
	    ]]>
	</sql>

    <insert id="save${className}" parameterType="java.util.Map">
    <![CDATA[
        INSERT INTO
        ${table.sqlName} (
        <#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        </#list>
        ) VALUES (
        <#list table.columns as column>
        	<#if column.pk>
        		uuid(),
        	<#elseif column.sqlTypeName=='NVARCHAR2'>
        		#${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='bigint'>
        		#${r"{"}${column.columnNameLower},jdbcType=BIGINT${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='varchar'>
        		#${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='LONGTEXT'>
        		#${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='longtext'>
        		#${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='int'>
        		#${r"{"}${column.columnNameLower},jdbcType=INTEGER${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='NUMBER'>
        		#${r"{"}${column.columnNameLower},jdbcType=INTEGER${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='timestamp'>
       			#${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
       		<#elseif column.sqlTypeName=='TIMESTAMP'>
       			#${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
       		<#elseif column.sqlTypeName=='double'>
       			#${r"{"}${column.columnNameLower},jdbcType=DOUBLE${r"}"} <#if column_has_next>,</#if>
       		<#elseif column.sqlTypeName=='DOUBLE'>
       			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=DOUBLE${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='DATE'>
        		#${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='date'>
        		#${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='DATETIME'>
        		#${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        	<#elseif column.sqlTypeName=='datetime'>
        		#${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        	<#else>
        		#${r"{"}${column.columnNameLower},jdbcType=${column.sqlTypeName}${r"}"} <#if column_has_next>,</#if>
        	</#if>
        </#list>        
        )
    ]]>

    </insert>

    <update id="update${className}" parameterType="java.util.Map">
    <![CDATA[
        UPDATE ${table.sqlName} SET
	        <#list table.columns as column>
	        <#if !column.pk>
	        	<#if column.sqlTypeName=='NVARCHAR2'>
	        		${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
	        	<#elseif column.sqlTypeName=='NUMBER'>
	        		${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=INTEGER${r"}"} <#if column_has_next>,</#if>
	        	<#elseif column.sqlTypeName=='bigint'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=BIGINT${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='varchar'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='LONGTEXT'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='longtext'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=VARCHAR${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='int'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=INTEGER${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='NUMBER'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=INTEGER${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='DATE'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='date'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='DATETIME'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='timestamp'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='TIMESTAMP'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='double'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=DOUBLE${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='DOUBLE'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=DOUBLE${r"}"} <#if column_has_next>,</#if>
        		<#elseif column.sqlTypeName=='datetime'>
        			${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=TIMESTAMP${r"}"} <#if column_has_next>,</#if>
	        	<#else>
	        		${column.sqlName} = #${r"{"}${column.columnNameLower},jdbcType=${column.sqlTypeName}${r"}"} <#if column_has_next>,</#if>
	        	</#if>
	        </#if>
	        </#list>
        WHERE 
        	<#list table.compositeIdColumns as column>
	        ${column.columnNameLower} = #${r"{"}${column.columnNameLower}${r"}"} <#if column_has_next>,</#if>
	        </#list>
    ]]>
    </update>

    <delete id="deleteById" parameterType="java.lang.String">
    <![CDATA[
        delete from ${table.sqlName} where
        <#list table.compositeIdColumns as column>
        ${column.sqlName} = #${r"{"}${column.columnNameLower}${r"}"} <#if column_has_next>,</#if>
		</#list>
    ]]>
    </delete>
    
    <delete id="batchDeleteByIds" parameterType="java.lang.String">
    	delete from ${table.sqlName} where ID in 
    	<foreach item="ids" collection="array" open="(" separator="," close=")">
    	 #${r"{"}ids${r"}"}   
    	</foreach>
    </delete>
    
     <select id="getMaxId" resultType="int">
		SELECT MAX(id) as id FROM ${table.sqlName}
	</select>
    
    <select id="getById" parameterType="java.lang.String" resultType="java.util.Map">
	    <include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from ${table.sqlName} AS pojo
	        where 
				<#list table.compositeIdColumns as column>
		        ${column.columnNameLower} = #${r"{"}${column.columnNameLower}${r"}"} <#if column_has_next>,</#if>
		        </#list>
	    ]]>
    </select>

	<sql id="dynamicWhere">
		<where>
		     1=1
		     <#list table.columns as column>
			<if test="${column.columnNameLower} != null and ${column.columnNameLower} != '' ">
				AND pojo.${column.sqlName} = #${r"{"}${column.columnNameLower}${r"}"}
			</if>
			</#list>
		</where>
	</sql>
	 
    <select id="count" parameterType="java.util.Map" resultType="int">
    <![CDATA[
        select 
        count(*)
        from ${table.sqlName} AS pojo
    ]]>
		<include refid="dynamicWhere"/>    
    </select>
    
    <!-- 返回map json分页  -->
	<select id="getListDataCount" parameterType="java.util.Map" resultType="long">
    <![CDATA[
        select 
        count(*)
        from ${table.sqlName} AS pojo
    ]]>
		<include refid="dynamicWhere"/>    
    </select>
    <!-- parameterType="java.util.Map" resultType="java.util.Map" -->
    <select id="getListData" parameterType="java.util.Map" resultType="java.util.Map">
    	<include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from ${table.sqlName} AS pojo
	    ]]>
	    <include refid="dynamicWhere"/>
	    limit #${r"{"}start${r"}"},#${r"{"}limit${r"}"}
    </select>
    
    <select id="findByPage" resultMap="${classNameLower}Result" parameterType="java.util.Map">
    	<include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from ${table.sqlName} AS pojo
	    ]]>
	    <include refid="dynamicWhere"/>
    </select>
    
    
    <select id="findAll" resultMap="${classNameLower}Result" parameterType="java.util.Map">
    	<include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from ${table.sqlName} AS pojo
	    ]]>
	    <include refid="dynamicWhere"/>
    </select>

    <#list table.columns as column>
    <#if column.unique && !column.pk>
    <select id="getBy${column.columnName}" resultMap="${classNameLower}Result" parameterType="${column.javaType}">
	    <include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from ${table.sqlName} where ${column.sqlName} = #${r"{"}{${column.columnNameLower}${r"}"}
	    ]]>
    </select>
    
    </#if>
	</#list>
	
</mapper>
